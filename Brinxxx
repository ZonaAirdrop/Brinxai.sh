#!/bin/bash

set -e

log() {
    local level=$1
    local message=$2
    echo "[$level] $message"
}

echo "\n\n############
 created by Zona Airdrop https://t.me/ZonaAirdr0p" > "created by Zona Airdrop.txt" ############\n"
sleep 5

echo -e "\n\n############ Auto Install Script for BrinxAI ############\n"
sleep 2

function setup_firewall {
    echo "Setting up Firewall..."
    sudo apt-get install -y ufw
    sudo ufw allow 22/tcp
    sudo ufw allow 5011/tcp
    sudo ufw --force enable
    sudo ufw status
}

function install_docker {
    if ! command -v docker &> /dev/null; then
        echo "Installing Docker and pulling Brinxai image..."
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
        sudo apt-get update
        sudo apt-get install -y docker-ce
        sudo docker pull admier/brinxai_nodes-worker:latest
    else
        echo "Docker is already installed. Skipping Docker installation."
    fi
}

function check_gpu {
    if lspci | grep -i nvidia; then
        echo "NVIDIA GPU detected. Installing NVIDIA Container Toolkit..."
        wget https://raw.githubusercontent.com/NVIDIA/nvidia-docker/main/scripts/nvidia-docker-install.sh
        sudo bash nvidia-docker-install.sh
    else
        echo "No NVIDIA GPU detected. Skipping NVIDIA installation."
    fi
}

function clone_repository {
    if [ ! -d "BrinxAI-Worker-Nodes" ]; then
        echo "Cloning BrinxAI Worker Nodes repository..."
        git clone https://github.com/admier1/BrinxAI-Worker-Nodes
        cd BrinxAI-Worker-Nodes || exit
        chmod +x install_ubuntu.sh
        ./install_ubuntu.sh
    else
        echo "BrinxAI Worker Nodes repository already cloned. Skipping clone."
        cd BrinxAI-Worker-Nodes || exit
    fi
}

function check_port {
    local port=$1
    if sudo lsof -i -P -n | grep ":$port" > /dev/null; then
        return 1
    else
        return 0
    fi
}

function find_available_port {
    local port=$1
    while ! check_port "$port"; do
        port=$((port+1))
    done
    echo "$port"
}

function run_additional_containers {
    echo "Running additional Docker containers..."

    local text_ui_port=$(find_available_port 5000)
    local stable_diffusion_port=$(find_available_port 5050)
    local rembg_port=$(find_available_port 7000)
    local upscaler_port=$(find_available_port 3000)

    sudo docker run -d --name text-ui --network brinxai-network --cpus=4 --memory=4096m -p 127.0.0.1:"$text_ui_port":5000 admier/brinxai_nodes-text-ui:latest
    sudo docker run -d --name stable-diffusion --network brinxai-network --cpus=8 --memory=8192m -p 127.0.0.1:"$stable_diffusion_port":5050 admier/brinxai_nodes-stabled:latest
    sudo docker run -d --name rembg --network brinxai-network --cpus=2 --memory=2048m -p 127.0.0.1:"$rembg_port":7000 admier/brinxai_nodes-rembg:latest
    sudo docker run -d --name upscaler --network brinxai-network --cpus=2 --memory=2048m -p 127.0.0.1:"$upscaler_port":3000 admier/brinxai_nodes-upscaler:latest
}

function main {
    setup_firewall
    install_docker
    check_gpu
    clone_repository
    run_additional_containers
    echo "Login input IP node, https://workers.brinxai.com"
    echo "Check Log: docker logs brinxai-worker-nodes-worker-1"
}

main
